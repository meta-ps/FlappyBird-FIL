[{"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\api\\hello.js":"1","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\index.js":"2","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\_app.js":"3","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\Bird.js":"4","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\features\\app-slice.js":"5","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\GameBox.js":"6","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\MainPage\\index.js":"7","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\Pipes.js":"8","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\store.js":"9"},{"size":175,"mtime":1675663097452,"results":"10","hashOfConfig":"11"},{"size":266,"mtime":1675691202327,"results":"12","hashOfConfig":"11"},{"size":144,"mtime":1675663097452,"results":"13","hashOfConfig":"11"},{"size":1369,"mtime":1675683288183,"results":"14","hashOfConfig":"11"},{"size":2540,"mtime":1675696455287,"results":"15","hashOfConfig":"11"},{"size":2694,"mtime":1675693002734,"results":"16","hashOfConfig":"11"},{"size":14979,"mtime":1675698359515,"results":"17","hashOfConfig":"11"},{"size":2948,"mtime":1675665296146,"results":"18","hashOfConfig":"11"},{"size":363,"mtime":1675677958561,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fgnech",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\api\\hello.js",[],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\index.js",[],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\pages\\_app.js",[],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\Bird.js",["49"],[],"import { gameOver, setBirdPosition } from './features/app-slice'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { store, constants } from './store'\r\n\r\n\r\nexport default function Bird() {\r\n  const birdPosition = useSelector((state) => state.birdPosition)\r\n  const gameStarted = useSelector((state) => state.gameStarted)\r\n  const [dieAudio, setAudio] = useState(null)\r\n  useEffect(() => {\r\n    setAudio(new Audio('/sound-effects/die.wav'))\r\n    // only run once on the first render on the client\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let timeId\r\n    if (gameStarted)\r\n      if (birdPosition < constants.WINDOW_HEIGHT)\r\n        timeId = setInterval(() => {\r\n          store.dispatch(setBirdPosition(constants.GRAVITY))\r\n        }, 24)\r\n      else {\r\n        store.dispatch(gameOver())\r\n        dieAudio.play()\r\n      }\r\n    return () => clearInterval(timeId)\r\n  }, [gameStarted, birdPosition])\r\n\r\n  return (\r\n    <BirdBox top={birdPosition} left={constants.BIRD_OFFSET} />\r\n  )\r\n}\r\n\r\nconst BirdBox = styled.div.attrs(props => ({\r\n  style: {\r\n    top: props.top,\r\n    left: props.left,\r\n  },\r\n}))`\r\nposition: absolute;\r\nbackground-color: red;\r\nbackground: no-repeat center/100% url('/img/ezgif.com-gif-maker.gif');\r\nwidth: ${constants.BIRD_SIZE}px;\r\nheight: ${constants.BIRD_SIZE}px\r\n`","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\features\\app-slice.js",[],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\GameBox.js",[],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\MainPage\\index.js",["50","51","52"],[],"C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\Pipes.js",["53"],[],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { addScore, gameOver, setPipePosition } from './features/app-slice';\r\nimport { constants, store } from './store';\r\n\r\nfunction selectRandomHeight() {\r\n  var max = (constants.WINDOW_HEIGHT - constants.PIPE_GAP - 50) / 50;\r\n  var height = Math.floor(Math.random() * (max - 1 + 1) + 1) * 50\r\n  return height\r\n}\r\n\r\nexport default function Pipes() {\r\n  const pipePosition = useSelector((state) => state.pipePosition)\r\n  const birdPosition = useSelector(state => state.birdPosition)\r\n  const gameStarted = useSelector((state) => state.gameStarted)\r\n  const [hitSound, setHitSound] = useState(null)\r\n  const [scoreSound, setScoreSound] = useState(null)\r\n  const [height1, setHeight1] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setHitSound(new Audio('/sound-effects/hit.wav'))\r\n    setScoreSound(new Audio('/sound-effects/point.wav'))\r\n    setHeight1(selectRandomHeight())\r\n    // only run once on the first render on the client\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let timeID;\r\n    if ((birdPosition < height1 ||\r\n      birdPosition + constants.BIRD_SIZE > height1 + constants.PIPE_GAP) &&\r\n      pipePosition <= constants.BIRD_OFFSET + constants.BIRD_SIZE &&\r\n      pipePosition + constants.PIPE_WIDTH >= constants.BIRD_OFFSET + 10) // here i used 10 just to offset the image collision a little bit to visualise correctly\r\n    {\r\n      store.dispatch(gameOver())\r\n      hitSound.play()\r\n    }\r\n    else if (gameStarted && pipePosition + constants.PIPE_WIDTH > 0) {\r\n      if (pipePosition + constants.PIPE_WIDTH <= constants.BIRD_SIZE + constants.BIRD_OFFSET &&\r\n        pipePosition + constants.PIPE_WIDTH >= constants.BIRD_OFFSET + constants.BIRD_SIZE - constants.PIPE_VELOCITY) {\r\n        store.dispatch(addScore())\r\n        scoreSound.play()\r\n      }\r\n      timeID = setInterval(() => {\r\n        store.dispatch(setPipePosition(pipePosition - constants.PIPE_VELOCITY))\r\n      }, 24)\r\n    }\r\n    else {\r\n      setHeight1(selectRandomHeight())\r\n      store.dispatch(setPipePosition(constants.WINDOW_WIDTH))\r\n    }\r\n    return () => clearInterval(timeID)\r\n  }, [gameStarted, pipePosition])\r\n\r\n  return (\r\n    <>\r\n      <Pipe1\r\n        top={0}\r\n        position={pipePosition}\r\n        height={height1} />\r\n\r\n      <Pipe\r\n        top={constants.PIPE_GAP + height1}\r\n        position={pipePosition}\r\n        height={constants.WINDOW_HEIGHT - constants.PIPE_GAP} />\r\n    </>\r\n  )\r\n}\r\nconst Pipe = styled.div.attrs(props => ({\r\n  style: {\r\n    top: props.top,\r\n    left: props.position,\r\n    height: props.height\r\n  },\r\n}))`\r\nposition: absolute;\r\nbackground: no-repeat center/100% url('/img/pipe2.png');\r\nbackground-position: top;\r\nwidth: ${constants.PIPE_WIDTH}px;\r\n`\r\nconst Pipe1 = styled(Pipe)`\r\nbackground: no-repeat center/100% url('/img/pipe1.png');\r\nbackground-position: bottom;\r\n`","C:\\Users\\Pradeepvarma_22\\Pradeepvarma_22\\FVM\\flappy-fil\\flappybird-fil-app\\components\\store.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":29,"column":6,"nodeType":"56","endLine":29,"endColumn":33,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":165,"column":29,"nodeType":"60","endLine":165,"endColumn":143},{"ruleId":"61","severity":1,"message":"62","line":165,"column":29,"nodeType":"60","endLine":165,"endColumn":143},{"ruleId":"58","severity":1,"message":"59","line":281,"column":37,"nodeType":"60","endLine":281,"endColumn":153},{"ruleId":"54","severity":1,"message":"63","line":54,"column":6,"nodeType":"56","endLine":54,"endColumn":33,"suggestions":"64"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dieAudio'. Either include it or remove the dependency array.","ArrayExpression",["65"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'birdPosition', 'height1', 'hitSound', and 'scoreSound'. Either include them or remove the dependency array.",["66"],{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [gameStarted, birdPosition, dieAudio]",{"range":"71","text":"72"},"Update the dependencies array to be: [birdPosition, gameStarted, height1, hitSound, pipePosition, scoreSound]",{"range":"73","text":"74"},[950,977],"[gameStarted, birdPosition, dieAudio]",[2225,2252],"[birdPosition, gameStarted, height1, hitSound, pipePosition, scoreSound]"]